This is a test file that I wrote on the 22nd of July, 2025 for my R package, "Hapax Legomena." This package will operate by stripping all the punctuation, looking at all words in lower case, and counting the occurrence of each word.
I am debating allowing contractions to stand as their own word, perhaps by leaving any-thing that matches the reg-ex form of [a-z]+'[a-z]+ (since all text will be converted to lower case first, the capital match will be obviated).
After creating an associative array where words are keys and values are counts, Hapax Legomena will create a graphical representation of word use. Perhaps a bar chart of the top five, ten, or 50 words, followed up with a line chart showing the word count compared to Zipf's law.
Zipf's law predicts that the most common word will appear twice as much as the second most common word and three times as much as the third. Fourth-place will be 1/4 as frequent.
After that, the user will be able to pick out the hapax legomena, that is, words that appear once within their text. The can then check out words that almost fit this category. Any word that is used only a handfull of times could easily be changed into a hapax legomenon, right? Spice it up!
And, for the determined user, this project will write/read in a file that tracks the total use of vocabulary across all the documents read into it. The same stats as above will appear for the life of the user.
Of course, there may be more additions to this project. I'm just a lowley prisoner (literally) trying to make a baccalaureate's degree with only a few hours of computer use per week. I'll have plenty of time to think about what to add, and not nearly as much time to add these things. But, I suppose, if you're reading this, the outcome is set.
	Now, the question is how to handle words with hyphens, dashes, etc.? Should "1/2" be counted as 1 and 2? Certainly not. What about the round-about way of typing words like that? Should that be round and about, or round-about? I feel the second option, but perhaps I ought to let the user decide. These complications add trepidations, as they are certainly not easy. The fastidious user will expect more than a perfunctory program.
Best,
-T. Tyler Thibeau (MDOC# 158275)