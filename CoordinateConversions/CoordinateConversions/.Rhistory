# Large = read.csv(file.choose(), header = TRUE)
# Government = read.csv(file.c//hoose(), header = TRUE)
# TicketToRide = read.csv(file.choose(), header = TRUE)
#"Select Fname, Lname#From Shipping#Where Mname != ''#And#Weight In#(Select Weight#From Shipping#Where Weight > 100000)"
## surface area
#sa = "2 * Height * Width + 2 * Length * Width * 2 * Height * Length"
## volume
#v = "Height * Length * Width"
## density
#d = "Mass / Volume"
query =
"
SELECT Spouse.Spouse1, Parent.*
FROM Spouse
RIGHT OUTER JOIN
Parent ON Spouse.Spouse2 = Parent.Parent
INNER JOIN
Person ON Parent.Parent = Person.Person
WHERE Person.Sex = 'F'
ORDER BY Person1.Person
"
sqldf(query)
# nfl = read.csv(file.choose(), header = TRUE)
# Shipping = read.csv(file.choose(), header = TRUE)
# Person = read.csv(file.choose(), header = TRUE)
# Parent = read.csv(file.choose(), header = TRUE)
# Spouse = read.csv(file.choose(), header = TRUE)
# Large = read.csv(file.choose(), header = TRUE)
# Government = read.csv(file.c//hoose(), header = TRUE)
# TicketToRide = read.csv(file.choose(), header = TRUE)
#"Select Fname, Lname#From Shipping#Where Mname != ''#And#Weight In#(Select Weight#From Shipping#Where Weight > 100000)"
## surface area
#sa = "2 * Height * Width + 2 * Length * Width * 2 * Height * Length"
## volume
#v = "Height * Length * Width"
## density
#d = "Mass / Volume"
query =
"
SELECT Spouse.Spouse1, Parent.*
FROM Spouse
RIGHT OUTER JOIN
Parent ON Spouse.Spouse2 = Parent.Parent
INNER JOIN
Person ON Parent.Parent = Person.Person
WHERE Person.Sex = 'F'
"
sqldf(query)
# nfl = read.csv(file.choose(), header = TRUE)
# Shipping = read.csv(file.choose(), header = TRUE)
# Person = read.csv(file.choose(), header = TRUE)
# Parent = read.csv(file.choose(), header = TRUE)
# Spouse = read.csv(file.choose(), header = TRUE)
# Large = read.csv(file.choose(), header = TRUE)
# Government = read.csv(file.c//hoose(), header = TRUE)
# TicketToRide = read.csv(file.choose(), header = TRUE)
#"Select Fname, Lname#From Shipping#Where Mname != ''#And#Weight In#(Select Weight#From Shipping#Where Weight > 100000)"
## surface area
#sa = "2 * Height * Width + 2 * Length * Width * 2 * Height * Length"
## volume
#v = "Height * Length * Width"
## density
#d = "Mass / Volume"
query =
"
Select Person.Name
From Person
Where Sex = 'M'
And Exists
(
Select Parent.Parent
From Parent
Where Person.Person = Parent.Parent
)
"
sqldf(query)
# nfl = read.csv(file.choose(), header = TRUE)
# Shipping = read.csv(file.choose(), header = TRUE)
# Person = read.csv(file.choose(), header = TRUE)
# Parent = read.csv(file.choose(), header = TRUE)
# Spouse = read.csv(file.choose(), header = TRUE)
# Large = read.csv(file.choose(), header = TRUE)
# Government = read.csv(file.c//hoose(), header = TRUE)
# TicketToRide = read.csv(file.choose(), header = TRUE)
#"Select Fname, Lname#From Shipping#Where Mname != ''#And#Weight In#(Select Weight#From Shipping#Where Weight > 100000)"
## surface area
#sa = "2 * Height * Width + 2 * Length * Width * 2 * Height * Length"
## volume
#v = "Height * Length * Width"
## density
#d = "Mass / Volume"
query =
"
Select Person.Name
From Person
Where Sex = 'F'
And Exists
(
Select Parent.Parent
From Parent
Where Person.Person = Parent.Parent
)
"
sqldf(query)
# nfl = read.csv(file.choose(), header = TRUE)
# Shipping = read.csv(file.choose(), header = TRUE)
# Person = read.csv(file.choose(), header = TRUE)
# Parent = read.csv(file.choose(), header = TRUE)
# Spouse = read.csv(file.choose(), header = TRUE)
# Large = read.csv(file.choose(), header = TRUE)
# Government = read.csv(file.c//hoose(), header = TRUE)
# TicketToRide = read.csv(file.choose(), header = TRUE)
#"Select Fname, Lname#From Shipping#Where Mname != ''#And#Weight In#(Select Weight#From Shipping#Where Weight > 100000)"
## surface area
#sa = "2 * Height * Width + 2 * Length * Width * 2 * Height * Length"
## volume
#v = "Height * Length * Width"
## density
#d = "Mass / Volume"
query =
"
Select Person.Name
From Person
Where Sex = 'F'
And Note Exists
(
Select Spouse.Spouse1
From Spouse
Where Person.Person = Spouse.Spouse1
)
"
sqldf(query)
# nfl = read.csv(file.choose(), header = TRUE)
# Shipping = read.csv(file.choose(), header = TRUE)
# Person = read.csv(file.choose(), header = TRUE)
# Parent = read.csv(file.choose(), header = TRUE)
# Spouse = read.csv(file.choose(), header = TRUE)
# Large = read.csv(file.choose(), header = TRUE)
# Government = read.csv(file.c//hoose(), header = TRUE)
# TicketToRide = read.csv(file.choose(), header = TRUE)
#"Select Fname, Lname#From Shipping#Where Mname != ''#And#Weight In#(Select Weight#From Shipping#Where Weight > 100000)"
## surface area
#sa = "2 * Height * Width + 2 * Length * Width * 2 * Height * Length"
## volume
#v = "Height * Length * Width"
## density
#d = "Mass / Volume"
query =
"
Select Person.Name
From Person
Where Sex = 'F'
And Not Exists
(
Select Spouse.Spouse1
From Spouse
Where Person.Person = Spouse.Spouse1
)
"
sqldf(query)
names(Largest)
names(Large)
script =
"
select
*
from
Large, Government, TicketToRide
where
Like %
"
sqldf(script)
script =
"
select
*
from
Large, Government, TicketToRide
where
Like '%'
"
sqldf(script)
script =
"
select
*
from
Large, Government, TicketToRide
where
Like '%s%'
"
sqldf(script)
script =
"
Select State, FirstCity, County As City, 1 as RankInState
From Large
Union
Select State, SecondCity, Country, 2
From Large
Union
Select State, ThirdCity, County, 3
From Large
"
sqldf(script)
script =
"
Select State, FirstCity, County As City, 1 as RankInState
From Large
Union
Select State, SecondCity, Country, 2
From Large
Union
Select State, ThirdCity, Country, 3
From Large
"
sqldf(script)
script =
"
Select State, FirstCity, Country As City, 1 as RankInState
From Large
Union
Select State, SecondCity, Country, 2
From Large
Union
Select State, ThirdCity, Country, 3
From Large
"
sqldf(script)
script =
"
Select State, FirstCity As City, Country, 1 as RankInState
From Large
Union
Select State, SecondCity, Country, 2
From Large
Union
Select State, ThirdCity, Country, 3
From Large
"
sqldf(script)
CapitalAndLargest =
"
Select City, State, 'Capital' As Designation
From Government
Where Country = 'US'
Union
Select FirstCity, State, 'Largest' As Designation
From Large
Where Country = 'US'
"
sqldf(CapitalAndLargest)
names(Government)
Rowify =
"
Select State, FirstCity As City, Country, 1 as RankInState
From Large
Union
Select State, SecondCity, Country, 2
From Large
Union
Select State, ThirdCity, Country, 3
From Large
"
CapitalAndLargest =
"
Select Capital, State, 'Capital' As Designation
From Government
Where Country = 'US'
Union
Select FirstCity, State, 'Largest' As Designation
From Large
Where Country = 'US'
"
sqldf(CapitalAndLargest)
Rowify =
"
Select State, FirstCity As City, Country, 1 as RankInState
From Large
Union
Select State, SecondCity, Country, 2
From Large
Union
Select State, ThirdCity, Country, 3
From Large
"
CapitalAndLargest =
"
Select Capital, State, 'Capital' As Designation
From Government
Where Country = 'US'
Union
Select FirstCity, State, 'Largest' As Designation
From Large
Where Country = 'US'
Order by State
"
sqldf(CapitalAndLargest)
crossroads =
"
Select Capital, State
From Governenment
Intersect
Select FirstCity, State
From Large
"
crossroads =
"
Select Capital, State
From Governenment
Intersect
Select FirstCity, State
From Large
"
sqldf(crossroads)
crossroads =
"
Select Capital, State
From Government
Intersect
Select FirstCity, State
From Large
"
sqldf(crossroads)
simple =
"
Select State
From Government
Where LowerHouse = UpperHouse
"
sqldf(simple)
crossroads =
"
Select Capital, State
From Government
Intersect
Select FirstCity, State
From Large
"
simple =
"
Select State, Country
From Government
Where LowerHouse = UpperHouse
"
sqldf(simple)
crossroads =
"
Select Capital, State
From Government
Intersect
Select FirstCity, State
From Large
"
simple =
"
Select State, Country
From Government
Where LowerHouse = UpperHouse
"
complex =
"
select State
from Government
where LowerHouse = 'R'
Intersect
select State
from Government
where UpperHouse = 'R'
union
select State
from Government
where LowerHouse = 'D'
Intersect
select State
from Government
where UpperHouse = 'D'
"
sqldf(simple)
complex =
"
select State
from Government
where LowerHouse = 'R'
Intersect
select State
from Government
where UpperHouse = 'R'
union
select State
from Government
where LowerHouse = 'D'
Intersect
select State
from Government
where UpperHouse = 'D'
"
crossroads =
"
Select Capital, State
From Government
Intersect
Select FirstCity, State
From Large
"
simple =
"
Select State, Country
From Government
Where LowerHouse = UpperHouse
"
complex =
"
select State
from Government
where LowerHouse = 'R'
Intersect
select State
from Government
where UpperHouse = 'R'
union
select State
from Government
where LowerHouse = 'D'
Intersect
select State
from Government
where UpperHouse = 'D'
"
sqldf(complex)
crossroads =
"
Select Capital, State
From Government
Intersect
Select FirstCity, State
From Large
"
simple =
"
Select State, Country
From Government
Where LowerHouse = UpperHouse
"
complex =
"
select State
from Government
where LowerHouse = 'R'
Intersect
select State
from Government
where UpperHouse = 'R'
union
select State
from Government
where LowerHouse = 'D'
Intersect
select State
from Government
where UpperHouse = 'D'
"
lowercaseNotCapital =
"
Select City, State
From TicketToRide
Except
Select Capital, State
From Government
"
sqldf(lowercaseNotCapital)
crossroads =
"
Select Capital, State
From Government
Intersect
Select FirstCity, State
From Large
"
simple =
"
Select State, Country
From Government
Where LowerHouse = UpperHouse
"
complex =
"
select State
from Government
where LowerHouse = 'R'
Intersect
select State
from Government
where UpperHouse = 'R'
union
select State
from Government
where LowerHouse = 'D'
Intersect
select State
from Government
where UpperHouse = 'D'
"
lowercaseNotCapital =
"
Select City, State
From TicketToRide
Except
Select Capital, State
From Government
order by state
"
sqldf(lowercaseNotCapital)
